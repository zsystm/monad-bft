name: Rust

on:
  merge_group:
    branches: ["master"]
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
    types: [ opened, synchronize, reopened, edited ]

concurrency:
  group: >
    ${{
      github.event_name == 'merge_group'
      && format('merge-group-{0}-rust', github.run_id)
      ||
        github.event_name == 'pull_request'
        && format('pr-{0}-rust', github.event.pull_request.number)
        || format('push-{0}-rust', github.ref)
    }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  CARGO_TERM_COLOR: always

  ASMFLAGS: -march=haswell
  CC: gcc-13
  CFLAGS: -march=haswell
  CXX: g++-13
  CXXFLAGS: -march=haswell -DQUILL_ACTIVE_LOG_LEVEL=QUILL_LOG_LEVEL_CRITICAL
  TRIEDB_TARGET: triedb_driver

jobs:
  build:
    runs-on: ubuntu-24.04-32

    steps:
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.REPO_READONLY_GITHUB_APP_ID }}
          private_key: ${{ secrets.REPO_READONLY_GITHUB_APP_KEY }}
          permissions: >-
            {"contents": "read"}
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ steps.generate_token.outputs.token }}
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            libboost-fiber1.83.0 \
            libboost-json1.83.0 \
            libboost-stacktrace1.83.0 \
            libboost-fiber1.83-dev \
            libboost-json1.83-dev \
            libboost-stacktrace1.83-dev \
            libboost1.83-dev \
            libbenchmark-dev \
            libcgroup-dev \
            libgmock-dev \
            libgtest-dev \
            libtbb-dev \
            liburing-dev \
            libarchive-dev \
            libbrotli-dev \
            libcap-dev \
            libcli11-dev \
            libgmp-dev \
            libzstd-dev  \
            clang-19 \
            libclang-19-dev
      - run: rustup toolchain install nightly-2024-12-10 --profile minimal --component rustfmt
      - run: rustup toolchain install 1.85.0-x86_64-unknown-linux-gnu --profile minimal --component clippy
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install cargo-shear
        run: cargo binstall --no-confirm cargo-shear
      - name: Verify lockfile
        run: cargo update --workspace --locked
      - name: Lint unused dependencies
        run: cargo shear
      - name: Format
        run: cargo +nightly-2024-12-10 fmt --all --check
      - uses: Swatinem/rust-cache@v2
      - name: Lint
        run: cargo clippy --all-targets --all-features --
          -D clippy::suspicious
          -D clippy::style
          -D clippy::clone_on_copy
          -D clippy::redundant_clone
          -D clippy::iter_kv_map
          -D clippy::iter_nth
          -D clippy::unnecessary_cast
          -D clippy::filter_next
          -D clippy::needless_lifetimes
          -D clippy::useless_conversion
          -D clippy::useless_vec
          -D clippy::needless_question_mark
          -D clippy::bool_comparison
          -D unused_imports
          -D unused_parens
          -D deprecated
          -A clippy::type_complexity
          -A clippy::int_plus_one
          -A clippy::uninlined-format-args
          -A clippy::enum-variant-names
          -A clippy::mutable_key_type
          -A clippy::large_enum_variant
          -A clippy::doc-overindented-list-items
      - name: Check
        run: cargo check --all-targets --all-features
      - name: Run tests
        run: cargo test --release --all-targets --all-features
      - name: Run doc tests
        run: cargo test --release --doc --all-features
      - run: rustup target add wasm32-unknown-unknown
      - name: Check WASM
        run: cargo check --target wasm32-unknown-unknown -p monad-debugger
